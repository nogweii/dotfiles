if [[ -n $P9K_CONTENT ]]; then
  # If P9K_CONTENT is not empty, use it. It's either "loading" or from zsh's built-in vcs_info
  # and not from gitstatus. VCS_STATUS_* parameters are thus not available.
  typeset -g _formatted_git_prompt=$P9K_CONTENT
  return
fi

# local color scheme for git details in my prompt
local colors
if (( $1 )); then
  # Styling for up-to-date Git status.
  typeset -A colors=(
         [meta]='%f'
        [clean]='%76F'
       [branch]='%7F'
     [modified]='%178F'
    [untracked]='%39F'
   [conflicted]='%196F'
  )
else
  # Styling for incomplete and stale Git status.
  # everything is grey and sad
  typeset -A colors=(
         [meta]='%244F'
        [clean]='%244F'
       [branch]='%244F'
     [modified]='%244F'
    [untracked]='%244F'
   [conflicted]='%244F'
  )
fi

# VCS_STATUS_* parameters are set by gitstatus plugin. See reference:
# https://github.com/romkatv/gitstatus/blob/master/gitstatus.plugin.zsh.

local res

# Show the branch name if it's known
if [[ -n $VCS_STATUS_LOCAL_BRANCH ]]; then
  local branch=${(V)VCS_STATUS_LOCAL_BRANCH}
  res+="${colors[meta]}${colors[branch]}${branch//\%/%%}"
fi

# Show tag only if not on a branch.
if [[ -n $VCS_STATUS_TAG && -z $VCS_STATUS_LOCAL_BRANCH ]]; then
  local tag=${(V)VCS_STATUS_TAG}
  res+="${colors[meta]}#${colors[clean]}${tag//\%/%%}"
fi

# Display the current Git commit if there is no branch and no tag.
[[ -z $VCS_STATUS_LOCAL_BRANCH && -z $VCS_STATUS_TAG ]] &&
  res+="${colors[meta]}@${colors[clean]}${VCS_STATUS_COMMIT[1,10]}"

if (( VCS_STATUS_COMMITS_AHEAD || VCS_STATUS_COMMITS_BEHIND )); then
  # ⇣42 if behind the remote.
  (( VCS_STATUS_COMMITS_BEHIND )) && res+=" ${colors[clean]}⇣${VCS_STATUS_COMMITS_BEHIND}"
  # ⇡42 if ahead of the remote; no leading space if also behind the remote: ⇣42⇡42.
  (( VCS_STATUS_COMMITS_AHEAD && !VCS_STATUS_COMMITS_BEHIND )) && res+=" "
  (( VCS_STATUS_COMMITS_AHEAD  )) && res+="${colors[clean]}⇡${VCS_STATUS_COMMITS_AHEAD}"
fi

# 'merge' if the repo is in an unusual state.
[[ -n $VCS_STATUS_ACTION     ]] && res+=" ${colors[conflicted]}${VCS_STATUS_ACTION}"
# ~42 if have merge conflicts.
(( VCS_STATUS_NUM_CONFLICTED )) && res+=" ${colors[conflicted]}~${VCS_STATUS_NUM_CONFLICTED}"
# +42 if have staged changes.
(( VCS_STATUS_NUM_STAGED     )) && res+=" ${colors[modified]}+${VCS_STATUS_NUM_STAGED}"
# !42 if have unstaged changes.
(( VCS_STATUS_NUM_UNSTAGED   )) && res+=" ${colors[modified]}!${VCS_STATUS_NUM_UNSTAGED}"
# "─" if the number of unstaged files is unknown. This can happen due to
# POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY (see below) being set to a non-negative number lower
# than the number of files in the Git index, or due to bash.showDirtyState being set to false
# in the repository config. The number of staged and untracked files may also be unknown
# in this case.
(( VCS_STATUS_HAS_UNSTAGED == -1 )) && res+=" ${colors[modified]}─"

typeset -g _formatted_git_prompt=$res
