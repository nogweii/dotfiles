#
# A theme that displays only relevant information in one line. Derived from the
# nicoulaj prompt with inspiration from Ph!l's Zsh prompt.
#
# Authors:
#   NoGUI <nogui@evaryont.me>
#
# Features:
#   - One line.
#   - VCS information in the right prompt.
#   - Only shows the path on the left prompt by default.
#   - Crops the path to a defined length and only shows the path relative to
#     the current VCS repository root.
#   - Shows the exit code/signal if the last command failed.
#   - Shows user name if not the 'normal' one.
#   - Shows if logged in as root or not.
#
# Screenshots:
#   (none yet)
#

# Prints the current directory hierarchy, excluding the present directory's
# name. e.g. If you are in '/opt/vagrant/bin', this prints out '/opt/vagrant/'.
# (Note the trailing slash!) This is useful, for instance, when you want to
# color the current directory name differently than the rest of the path.
function _current_dir_path() {
  # Techniques for building the current path:
  # local gitinfo='${${vcs_info_msg_0_%%.}/$HOME/~}'
  print -P "%-1~/%1~"
  if [[ $PWD = '/' ]]; then
    echo ""
  elif [[ $PWD = $HOME ]]; then
    echo ""
  else
    echo "${$(print -P %~)%/*}/"
  fi
}

function prompt_evaryont_precmd {
  local exitstatus=$?
  setopt localoptions noxtrace noksharrays

  # Show the signal name if available in the prompt
  psvar=(SIG)
  [[ $exitstatus -gt 128 ]] && psvar[1]=SIG$signals[$exitstatus-127]
  [[ $psvar[1] = SIG ]] && psvar[1]=$exitstatus

  vcs_info

  local icon_mountain="Ô®à" # \ufa08, the mountain icon
  local icon_python="Ô†ü " # \uf81f, python lang logo
  local icon_snake="üêç" # \u1f40d snake emoji

  if [[ -f .terraform/environment ]]; then
    _prompt_tf_workspace="%F{97}${icon_mountain}$(< .terraform/environment)%f "
  else
    _prompt_tf_workspace=""
  fi

  if [[ -n "${VIRTUAL_ENV}" ]]; then
    _prompt_virtualenv="%F{64}${icon_snake}${VIRTUAL_ENV:t}%f "
  else
    _prompt_virtualenv=""
  fi
}

function prompt_evaryont_help {
  cat <<'EOF'
  prompt evaryont

  A theme that displays only relevant information in one line. Derived from the
  nicoulaj prompt with inspiration from Ph!l's Zsh prompt.
EOF
  [[ $ZSH_VERSION < 5.0.2 ]] &&
    print '  Designed using Zsh version 5.0.2. No guarentees it will work.'

  cat <<EOF

  Supports configuration using various styles in stead of passing parameters.
  The zsh style mechanism using the zstyle command is describe in zshmodules(1).
  This is the same mechanism used in the completion system.

  The styles below are all examined in the context :prompt:evaryont.

  * normal_user
      The name of the username you are normally associated with. If the current
      user is not the same as this value, then it will be displayed in the
      prompt. This is also known as the logname(1).

      Default: $LOGNAME

  * path_length
      The maximum length of the current directory displayed in the prompt.

      Default: $(( $COLUMNS / 3 ))
EOF
}

function prompt_evaryont_setup {
  # All setopt's are local to this function only
  setopt LOCAL_OPTIONS
  # Disable shell tracing (zsh -x, for instance)
  unsetopt XTRACE
  # promptinit will setopt various PROMPT_* options according to this array:
  prompt_opts=(cr percent subst sp)
  # NB: make sure this matches ../20_options.zsh to prevent confusion. ü§¶

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  local normal_user max_path_chars

  # Customizable parameters.
  zstyle -s ':prompt:evaryont' normal_user 'normal_user' || \
    normal_user="$LOGNAME"
  zstyle -s ':prompt:evaryont' path_length 'max_path_chars' || \
    max_path_chars=$(( $COLUMNS / 3 ))

  # Set vcs_info parameters.
  zstyle -d ':vcs_info:*'
  zstyle ':vcs_info:*' enable git hg svn
  zstyle ':vcs_info:*' check-for-changes true
  # Set colors based on stage/unstaged files
  zstyle ':vcs_info:*' unstagedstr '%F{076}'
  zstyle ':vcs_info:*' stagedstr '%F{208}'
  # Show the branch, a colored symbol & the current action
  zstyle ':vcs_info:*' actionformats "%b%u%c‚ö™ (%a)"
  # Show the branch and a colored symbol
  zstyle ':vcs_info:*' formats "%b%u%c‚ö™"
  # And now, the same thing as above, but with the symbol replaced by
  # VCS-specific variation, for neato's sake.
  zstyle ':vcs_info:git:*' actionformats "%b%u%c¬± (%a)"
  zstyle ':vcs_info:git:*' formats "%b%u%c¬±"
  zstyle ':vcs_info:hg:*' actionformats "%b%u%c‚òø (%a)"
  zstyle ':vcs_info:hg:*' formats "%b%u%c‚òø"
  zstyle ':vcs_info:bzr:*' actionformats "%b%u%c‚öë (%a)"
  zstyle ':vcs_info:bzr:*' formats "%b%u%c‚öë"
  zstyle ':vcs_info:*' nvcsformats ''

  local user_color='105' # non-normal account name
  if [[ "${USER}" == "root" ]]; then
    # If we're root, let's have the prompt warn us with colors as well
    user_color='052'
  fi

  if [[ -n "${SSH_TTY}" ]]; then
    ssh_host="%F{202}%m%f "
  fi

  shell_in_subshell="%2(L.üêö%L .)"

  # Define prompts.
  PROMPT="${shell_in_subshell}${ssh_host}%F{014}%${max_path_chars}<...<%F{014}\${\${(D)PWD:h}%/}/%<<%F{002}\${PWD:t}%(!.%F{052}‚ö°.%F{015}ÓÇ±)%b%f "
  RPROMPT="%(?..%F{124}%1v%f! )"'${_prompt_virtualenv}${_prompt_tf_workspace}${ruby_version}${vcs_info_msg_0_}%f'

  add-zsh-hook precmd prompt_evaryont_precmd
}

prompt_evaryont_setup "$@"

# vim: set filetype=zsh:
